name: CI

on:
  workflow_dispatch:

  push:
    branches:
      - master
      - beta
      - alpha
      - '*.x'

  pull_request:

concurrency:
  group: {{ '${{ github.workflow }}-${{ github.ref }}' }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: 3.x

      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
        with:
          extra_args: --hook-stage manual --all-files

      - name: Run PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

[% if repo_name == 'ss-pybind11' %]
  consistency:
    if: {{ '${{ !cancelled() && ! failure() }}' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: 3.x

      - name: Install copier
        run: pipx install copier==9.4.1

      - name: Verify template
        run: pipx run nox -s template_build

      - name: Test for consistency
        run: |
          echo "List inconsistent files:"
          git status --porcelain
          git diff --exit-code || ( \
            echo "# :warning: Inconsistent files found" >> $GITHUB_STEP_SUMMARY && \
            echo "The following files are inconsistent with the template:" >> $GITHUB_STEP_SUMMARY && \
            git status --porcelain | while read file; do echo "- $file"; done >> $GITHUB_STEP_SUMMARY && \
            echo "" >> $GITHUB_STEP_SUMMARY && \
            echo "Please run 'copier copy -r HEAD -f . .' to fix them." >>$GITHUB_STEP_SUMMARY && \
            exit 1 \
          )
[% endif %]

  checks:
    runs-on: {{ '${{ matrix.runs-on }}' }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.12']
        runs-on: [ubuntu-22.04, macos-14, windows-2022]

        include:
          - python-version: pypy-3.10
            runs-on: ubuntu-22.04

    name: Check Python {{ '${{ matrix.python-version }} on ${{ matrix.runs-on }}' }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: |
            ~/vcpkg
            ~/.cache/pip
            ~/.cache/vcpkg
          key: {{ '${{ matrix.python-version }}-${{ matrix.runs-on }}-${{ hashFiles(\'vcpkg.json\') }}' }}
          restore-keys: {{ '${{ matrix.python-version }}-${{ matrix.runs-on }}-${{ hashFiles(\'vcpkg.json\') }}' }}

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: {{ '${{ matrix.python-version }}' }}

      - name: Install package
        run: python -m pip install .[test] -v

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20
[% if use_codecov == true %]
      - name: Upload coverage report
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a # v5.0.7
[% endif %]

  check-docs:
    runs-on: ubuntu-22.04
    needs: [pre-commit
[%- if repo_name == 'ss-pybind11' -%]
    , consistency
[%- endif -%]
    ]
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4
        with:
          path: |
            ~/vcpkg
            ~/.cache/pip
            ~/.cache/vcpkg
          key: docs-{{ '${{ hashFiles(\'vcpkg.json\') }}' }}
          restore-keys: docs-{{ '${{ hashFiles(\'vcpkg.json\') }}' }}

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: 3.x

      - name: Checks the docs with warnings as errors
        run: pipx run nox -s docs -- --check
[%- if docs_type == 'sphinx' %]

      - name: Checks the docs for broken links
        run: pipx run nox -s docs -- --linkcheck
[%- endif %]
[%- if repo_name == 'ss-pybind11'%]


  check-mkdocs-docs:
    runs-on: ubuntu-22.04
    needs: [pre-commit, consistency]
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: 3.x

      - name: Install copier
        run: pipx install copier==9.4.1

      - name: Apply mkdocs
        run: pipx run nox -s template_build -- -d docs_type=mkdocs

      - name: Checks the docs with warnings as errors
        run: pipx run nox -s docs -- --check
[%- endif %]


  pass:
    if: always()
    needs:
      - checks
      - check-docs
[%- if repo_name == 'ss-pybind11' %]
      - check-mkdocs-docs
[%- endif %]
    runs-on: ubuntu-22.04
    timeout-minutes: 2
    permissions:
      pull-requests: write

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: {{ '${{ toJSON(needs) }}' }}

      - name: Approve pr if all jobs succeeded
        if: contains(github.event.pull_request.labels.*.name, 'auto-approval')
        uses: hmarr/auto-approve-action@v4
